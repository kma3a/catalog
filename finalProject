filelocation=${CATALOG_LOCATION:=$HOME}
filename=catalog
file=$filelocation/$filename

createfile () {
  if [ ! -e "$file" ] ; then
    echo 'That file does not exist would you like to create it (y\n}? \c'
    read makefile
    if [ "$makefile" = "y" ] ; then
      touch $file
    else
      exit 1
    fi
  fi
}

search () {
  matches=$(grep -i "$1" $file)
  display "$matches"
}

removal () {
  grep -v "$1" $file > /tmp/$filename
  mv /tmp/$filename $file
}
display () {
  linenumber=$(echo "$1" | wc -l)
  currentlinenum=1
  while [ "$currentlinenum" -le "$linenumber" ]
  do
    currentline=$(echo "$1" | sed -n ${currentlinenum}p)
    title=$(echo "$currentline" | cut -f1)
    author=$(echo "$currentline" | cut -f2)
    genre=$(echo "$currentline" | cut -f3)
    hasread=$(echo "$currentline" | cut -f4)
    printf "Title:%-40.40s\tby: %s\n\tgenre: %-40.40s\tread book? %s\n" "$title" "$author" "$genre" "$hasread"
    currentlinenum=$(expr $currentlinenum + 1)
  done
}


if [ "$#" = 0 ] ; then 
  valid_choice=

  echo "Welcome to your book records!\n"

  until [ -n "$valid_choice" ]
  do 
    createfile
    
    echo '
      would you like to:
      
      1. search the catalog
      2. add to the catalog
      3. edit a record
      4. remove a record
      5. view all records
      6. exit the program

      Please select one of the above (1-6): \c'

      read choice 

      case "$choice"
      in
      1) echo "What book would you like to look up? \c"
         read answer
         if [ -z "$answer" ] ; then
           echo "Invalid input. Canceling search."
         else 
           search $answer
         fi;;
      2) finished= 
        until [ -n "$finished" ]
        do 
          echo "What is the title of the book would you like to add? \c"
           read booktitle
           echo "What is the name of the author? \c"
           read author
           echo "What genre is the book? \c"
           read genre
           echo "Have you read the book? (y/n) \c"
           read readstatus
           echo "$booktitle\t$author\t$genre\t$readstatus" >> $file
           sort -o $file $file
           echo "Would you like to add another book? (y/n) \c"
           read addanother
           if [ "$addanother" != "y" ] ; then
             finished=TRUE
           fi
        done;;
      4) echo "What is the would you like to remove? \c"
         read removalsearch
         if [ -z "$removalsearch" ] ; then
           echo "Invalid input. Canceling removal."
         else
           matches=$(grep -i "$removalsearch" $file)
           linenumber=$(echo "$matches" | wc -l)
           if [ "$linenumber" -gt 1 ] ; then 
             currentlinenum=1
             foundmatch=
             while [ -z "$foundmatch" ]
             do 
               currentline=$(echo "$matches" | sed -n ${currentlinenum}p)
               title=$(echo "$currentline" | cut -f1)
               echo "Would you like to delete $title? (y/n) \c"
               read answer
               if [ "$answer" = "y" ] ; then
                 removal "$currentline"
                 foundmatch=TRUE
               fi
               currentlinenum=$(expr $currentlinenum + 1)
             done
           else
             removal "$matches"
           fi
         fi;;
      5) allbooks=$(grep "" "$file")
        display "$allbooks";;
      6) echo "Are you sure you would like to exit? (y/n) \c"
        read answer
        if [ "$answer" = "y" ] ; then
          exit 0
        fi;;
      *) echo "Please enter a valid input";;
      esac

  done
else
  if [ ! -e "$file" ] ; then
    exit 1
  fi

fi


