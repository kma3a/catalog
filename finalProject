filelocation=${CATALOG_LOCATION:=$HOME}
filename=catalog
file=$filelocation/$filename
booktitle=;
author=;
genre=;
readstatus=;
editor=${EDITOR:=vi}

add () {
 echo "$booktitle\t$author\t$genre\t$readstatus" >> $file
 sort -o $file $file
}


createfile () {
  if [ ! -e "$file" ] ; then
    echo 'That file does not exist would you like to create it (y\n}? \c'
    read makefile
    if [ "$makefile" = "y" ] ; then
      touch $file
    else
      exit 1
    fi
  fi
}

search () {
  matches=$(grep -i "$1" $file | sed -e /^$/d)
  if [ "$matches" ] ; then
    display "$matches"
  else
    echo "Could not find $1"
  fi
}

removal () {
  grep -v "$1" $file > /tmp/$filename
  mv /tmp/$filename $file
  rm /tmp/$filename
}

revise () {
  echo "$1" | tr "\t" "+" | sed "s/\([^+]*\)+\([^+]*\)+\([^+]*\)+\([^+]*\)/title: \1\+author: \2\+genre: \3\+readstatus: \4/" | tr "+" "\012" > /tmp/ed$$
  $editor /tmp/ed$$
  grep -v "^$1$" $file > /tmp/$filename
  cat /tmp/ed$$ | sed "s/^.*: \(.*\)/\1/g" | tr '\012' '\t' >> /tmp/$filename
  sort /tmp/$filename -o $file
  rm /tmp/$filename /tmp/ed$$
}

desplayopts () {
  echo "Usage: finalproject [-a] [-g] [-r] [-b]";
  echo "-a adds the item to the list";
  echo "-b specifies the author"
  echo "-g specifies the genre";
  echo "-r specifies if you have read the book";
  exit 1
}

display () {
  linenumber=$(echo "$1" | wc -l)
  currentlinenum=1
  while [ "$currentlinenum" -le "$linenumber" ]
  do
    currentline=$(echo "$1" | sed -n ${currentlinenum}p)
    title=$(echo "$currentline" | cut -f1)
    author=$(echo "$currentline" | cut -f2)
    genre=$(echo "$currentline" | cut -f3)
    hasread=$(echo "$currentline" | cut -f4)
    printf "Title:%-40.40s\tby: %s\n\tgenre: %-40.40s\tread book? %s\n" "$title" "$author" "$genre" "$hasread"
    currentlinenum=$(expr $currentlinenum + 1)
  done
}

editordelete () {
  echo "What is the would you like to $1? \c"
  read searchitem
  if [ -z "$searchitem" ] ; then
    echo "Invalid input. Canceling $1."
  else
    matches=$(grep -i "$searchitem" $file)
    linenumber=$(echo "$matches" | wc -l)
    if [ "$matches" -a "$linenumber" -gt 1 ] ; then 
      currentlinenum=1
      foundmatch=
      while [ -z "$foundmatch" -a "$currentlinenum" -le "$linenumber" ] 
      do 
        currentline=$(echo "$matches" | sed -n ${currentlinenum}p)
        title=$(echo "$currentline" | cut -f1)
        echo "Would you like to $1 $title? (y/n) \c"
        read answer
        if [ "$answer" = "y" ] ; then
          if [ "$1" = "delete" ] ; then
            removal "$currentline"
          else
            revise "$currentline"
          fi
          foundmatch=TRUE
        fi
        currentlinenum=$(expr $currentlinenum + 1)
      done
    elif [ "$matches" ] ; then 
      if [ "$1" = "delete" ] ; then
        removal "$matches"
      else
        revise "$matches"
      fi
    else
      echo "Could not find match for $searchitem"
    fi
  fi
}

menu () {
  until [ -n "$valid_choice" ]
  do 
    createfile
    
    echo '
      would you like to:
      
      1. search the catalog
      2. add to the catalog
      3. edit a record
      4. remove a record
      5. view all records
      6. exit the program

      Please select one of the above (1-6): \c'

      read choice 

      case "$choice"
      in
      1) echo "What book would you like to look up? \c"
         read answer
         if [ -z "$answer" ] ; then
           echo "Invalid input. Canceling search."
         else 
           search $answer
         fi;;
      2) finished= 
        until [ -n "$finished" ]
        do 
          echo "What is the title of the book would you like to add? \c"
           read booktitle
           echo "What is the name of the author? \c"
           read author
           echo "What genre is the book? \c"
           read genre
           echo "Have you read the book? (y/n) \c"
           read readstatus
           add
           echo "Would you like to add another book? (y/n) \c"
           read addanother
           if [ "$addanother" != "y" ] ; then
             finished=TRUE
           fi
        done;;
      3) editordelete "edit";;
      4) editordelete "delete";;
      5) allbooks=$(grep "" "$file")
        display "$allbooks";;
      6) echo "Are you sure you would like to exit? (y/n) \c"
        read answer
        if [ "$answer" = "y" ] ; then
          exit 0
        fi;;
      *) echo "Please enter a valid input";;
      esac

  done
}

if [ "$#" = 0 ] ; then 
  trap menu 2
  valid_choice=

  echo "Welcome to your book records!\n"

  menu
else
  if [ ! -e "$file" ] ; then
    exit 1
  fi
  hasopts=

  while getopts "a:b:g:r:" option
  do
    hasopts=true
    case "$option"
    in
      a) booktitle="$OPTARG";;
      b) author="$OPTARG";;
      g) genre="$OPTARG";;
      r) readstatus="$OPTARG";;
      \?) desplayopts;;
    esac
  done

  if [ -n "$hasopts" ] ; then
    add
  else
    search "$*"
  fi 
fi


